apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

Properties props = new Properties()
props.load(new FileInputStream(file("keystore.properties")))

Properties localProperties = new Properties()
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.milan.chat.openai.gpt"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        multiDexEnabled true
        flavorDimensions "1"

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }

        buildConfigField(
                "String",
                "OPEN_AI_CHAT_GPT_API_KEY",
                "\"" + localProperties.getProperty("OPEN_AI_CHAT_GPT_API_KEY", "") + "\""
        )
    }

    signingConfigs {
        debug {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
            enableV1Signing true
            enableV2Signing true
        }
        release {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
            enableV1Signing true
            enableV2Signing true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation project(':chatkit')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.8.0'

//    api 'com.github.bumptech.glide:glide:4.12.0'
//    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    //Picasso
    implementation "com.squareup.picasso:picasso:2.71828"

    api 'com.guolindev.permissionx:permissionx:1.6.0'

    api 'com.github.tapadoo:alerter:7.2.4'

    api 'de.hdodenhof:circleimageview:3.1.0'

    api 'com.tencent:mmkv-static:1.2.10'

    api "androidx.room:room-runtime:2.3.0"
    kapt 'androidx.room:room-compiler:2.3.0'
    annotationProcessor 'androidx.room:room-compiler:2.3.0'
    api 'androidx.room:room-ktx:2.3.0'
    api "androidx.room:room-rxjava2:2.3.0"
    api "androidx.room:room-guava:2.3.0"

    //刷新加载库
    api 'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    api 'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
//    api  'io.github.scwang90:refresh-header-radar:2.0.5'       //雷达刷新头
//    api  'io.github.scwang90:refresh-header-falsify:2.0.5'     //虚拟刷新头
    api 'io.github.scwang90:refresh-header-material:2.0.5'    //谷歌刷新头
//    api  'io.github.scwang90:refresh-header-two-level:2.0.5'   //二级刷新头
//    api  'io.github.scwang90:refresh-footer-ball:2.0.5'        //球脉冲加载
    api 'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载

    //ImageViews
    implementation "de.hdodenhof:circleimageview:3.1.0"
    implementation "com.github.siyamed:android-shape-imageview:0.9.3"

    //Utils
    implementation "me.relex:circleindicator:1.2.2@aar"

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

//    implementation "io.reactivex.rxjava3:rxjava:3.1.3"
//    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
//    implementation "com.jakewharton.retrofit:retrofit2-reactor-adapter:2.9.0"

    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'com.elvishew:xlog:1.6.1'

    implementation 'androidx.multidex:multidex:2.0.1'
}
