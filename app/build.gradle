apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

apply plugin: 'com.tencent.vasdolly'

Properties props = new Properties()
props.load(new FileInputStream(file("keystore.properties")))

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.milan.chat.openai.gpt"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        multiDexEnabled true
        flavorDimensions "1"

        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    signingConfigs {
        debug {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
            enableV1Signing true
            enableV2Signing true
        }
        release {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
            enableV1Signing true
            enableV2Signing true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = compose_version
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/INDEX.LIST', 'META-INF/io.netty.versions.properties']
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

//VasDolly插件配置
//dev：（Development environment）开发环境，用于开发者调试使用
//uat：（User Acceptance environment）用户验收测试环境，生产环境下的软件测试者测试使用
//pre：灰度环境，先阶段暂无
//prod：生产环境，正式线上环境
//gradle channelDebug/channelRelease 编译生成apk后，再根据生成的Apk生成渠道包
channel {
    channelFile = file("app_channel.txt")
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
    outputDir = new File(project.buildDir, "channels")
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}-${buildTime}
    apkNameFormat = 'aurora-${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    fastMode = false
    //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
    buildTimeDateFormat = 'yyyyMMdd-HHmmss'
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}

// gradle rebuildChannel 配置此任务用于不希望重新构建apk，直接根据指定的apk生成渠道包
rebuildChannel {
    channelFile = file("app_channel.txt")
    //指定的apk生成渠道包,文件名中如果有base将被替换为渠道名，否则渠道名将作为前缀
    baseApk = new File(project.buildDir, "outputs/apk/debug/app-debug.apk")
    //默认为new File(project.buildDir, "rebuildChannel")
    outputDir = new File(project.buildDir, "rebuildChannels")
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    fastMode = false
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}

dependencies {
    implementation project(path: ':lib_data_provider')
    implementation project(':chatkit')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13.2'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.8.0'

    kapt 'com.github.bumptech.glide:compiler:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'

    kapt 'androidx.room:room-compiler:2.5.1'
    annotationProcessor 'androidx.room:room-compiler:2.5.1'

    //Picasso
    implementation "com.squareup.picasso:picasso:2.71828"

    implementation "com.github.skydoves:powermenu:2.2.2"
}
